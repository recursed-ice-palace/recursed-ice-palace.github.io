{"version":3,"file":"static/webpack/static/development/pages/index.js.697bfa88b779caa95c8d.hot-update.js","sources":["webpack:///./components/MobileNav.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Link from 'next/link'\nimport classNames from 'classnames'\nimport { menus, getChestSize, palette, getTileSize } from '../config'\n\n// 1. Single menu item\n\nconst menuItem = currentPage => ([menuName, { path, icon, secondaryIcon }]) => (\n  <li key={menuName} className={classNames({ active: currentPage === menuName })}>\n    <Link href={path}>\n      <div>\n        <div className=\"menu-icon\"/>\n        <a>{menuName}</a>\n      </div>\n    </Link>\n    <style jsx>{`\n      li {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin: 8px auto;\n      }\n      .menu-icon {\n        width: 40px;\n        height: 40px;\n        margin-right: 8px;\n        background-image: url(\"${icon}\");\n        background-size: 40px;\n        background-position: center -8px;\n        background-repeat: no-repeat;\n      }\n      a {\n        padding: 0 16px;\n        text-decoration: none;\n        font-size: 24px;\n        min-width: 140px;\n        color: ${palette.black};\n        text-align: center;\n      }\n      a:hover {\n        color: ${palette.ice.darkest};\n      }\n      .active .menu-icon {\n        background-image: url(\"${secondaryIcon}\");\n      }\n      .active a {\n        color: ${palette.ice.dark};\n        background-color: ${palette.ice.lighter};\n      }\n    `}</style>\n  </li>\n)\n\n// 2. Hamburger button\n\nconst expandButton = ({ onClick, isCollapsed }) => (\n  <button onClick={onClick} className={classNames({ 'is-collapsed': isCollapsed })}>\n    <div className=\"button-text\">Menu</div>\n    <div className=\"menu-icon\"></div>\n    <style jsx>{`\n      button {\n        display: flex;\n        align-items: flex-end;\n        padding: 0;\n        margin: 0 4px 0 auto;\n        height: 40px;\n        background: none;\n        font-size: 24px;\n        color: ${palette.ice.lightest};\n      }\n      .button-text {\n        padding: 8px;\n      }\n      .menu-icon {\n        width: ${getChestSize()};\n        height: ${getChestSize()};\n        margin-top: -40px;\n        background-image: url('/static/closed_01.png');\n        background-size: ${getChestSize()} ${getChestSize()};\n        background-position: center bottom;\n        background-repeat: no-repeat;\n      }\n      .is-collapsed .menu-icon {\n        background-image: url('/static/open_01.png');\n      }\n      button:hover {\n        color: ${palette.ice.light};\n      }\n    `}</style>\n  </button>\n)\n\n// 3. Composed nav\n\nexport default ({ currentPage }) => {\n  const [isCollapsed, setIsCollapsed] = useState(true)\n\n  const toggleMenu = () => setIsCollapsed(!isCollapsed)\n\n  return (\n    <nav>\n      {expandButton({ onClick: toggleMenu, isCollapsed })}\n      <ul className={classNames({ \"is-collapsed\": isCollapsed })}>\n        {Object.entries(menus).map(menuItem(currentPage))}\n      </ul>\n      <style jsx>{`\n        nav {\n          width: 100%;\n          margin: 0 auto;\n        }\n        ul {\n          margin: 0 auto;\n          overflow: hidden;\n          background-color: ${palette.ice.light};\n        }\n        ul::before {\n          content: '';\n          display: block;\n          width: 100%;\n          height: ${getTileSize()};\n          background-image: url(\"/static/horizontal.png\");\n          background-size: ${getTileSize()};\n          background-repeat: repeat-x;\n        }\n        .is-collapsed {\n          display: none;\n        }\n      `}</style>\n    </nav>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AACA;AA8CA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AAqCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AA8BA;;;;A","sourceRoot":""}