{"version":3,"file":"static/webpack/static/development/pages/faq.js.bc47ea1ff763329e3f14.hot-update.js","sources":["webpack:///./components/Qna.js"],"sourcesContent":["import React from 'react'\nimport { palette } from '../config';\n\nconst parseSingleQuestion = ([question, shortAnswer, longAnswer], index) => (\n  <React.Fragment key={index}>\n    <dt>{question}</dt>\n    <dd>\n      <p className=\"short-answer\">{shortAnswer}</p>\n      <p>{longAnswer}</p>\n    </dd>\n  </React.Fragment>\n)\n\nconst parseQuestions = (questions) => questions.map(parseSingleQuestion)\n\n// export default ({ contents }) => (\n//   <section className=\"qna\">\n//     {parseQuestions(contents)}\n//     <style jsx>{`\n//       .qna :global(dt) {\n//         position: relative;\n//         margin: 32px 0 16px 0;\n//         padding-left: 32px;\n//         font-size: 24px;\n//         color: ${palette.black};\n//       }\n//       .qna :global(dt)::before {\n//         content: 'Q. ';\n//         position: absolute;\n//         left: 0px;\n//         color: ${palette.ice.dark};\n//       }\n//       .qna :global(dd) :global(.short-answer) {\n//         position: relative;\n//         padding-left: 32px;\n//         color: ${palette.black};\n//       }\n//       .qna :global(dd) :global(.short-answer)::before {\n//         content: 'A. ';\n//         position: absolute;\n//         left: 0px;\n//         color: ${palette.ice.dark};\n//       }\n//       .qna :global(dd) :global(p) {\n//         padding-left: 32px;\n//       }\n//     `}</style>\n//   </section>\n// )\n\nexport default ({ children }) => {\n  console.log(children[0])\n  return children\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AASA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}